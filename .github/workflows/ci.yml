name: Build and Test React Application

# Controls when the action will run.
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [main]
  pull_request:
    branches: [main]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  build_test:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [16.x, 19.x]

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
      - name: npm i, build and test
        run: |
          npm i
          npm run build --if-present
  build_image:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    needs: build_test
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      - name: template .env file
        run: |
          touch .env.production
          echo REACT_APP_CLIENT_ID=${{ secrets.REACT_APP_CLIENT_ID }} >> .env.production
          echo AUTH0_SECRET=${{ secrets.AUTH0_SECRET }} >> .env.production
          echo AUTH0_BASE_URL=${{ secrets.AUTH0_BASE_URL }} >> .env.production
          echo AUTH0_ISSUER_BASE_URL=${{ secrets.AUTH0_ISSUER_BASE_URL }} >> .env.production
          echo AUTH0_CLIENT_ID=${{ secrets.AUTH0_CLIENT_ID }} >> .env.production
          echo AUTH0_CLIENT_SECRET=${{ secrets.AUTH0_CLIENT_SECRET }} >> .env.production
          echo PASSWORD_SERVICE_URL=${{ secrets.PASSWORD_SERVICE_URL }} >> .env.production


      - name: build docker image
        run: docker build -t "iqfx/password-frontend:latest" ./
  deploy_image:
    runs-on: ubuntu-latest
    needs: build_image
    steps:
      - uses: actions/checkout@v3
      - name: Generate kube configuration
        run: |
          mkdir ~/.kube
          touch ~/.kube/config
          echo "${{ secrets.KUBE_CONF }}" >> ~/.kube/config

      - name: Apply deployment
        run: kubectl apply -f kubernetes/deployment.yml

      - name: Restart deployment
        run: kubectl rollout restart deploy password-frontend-app
